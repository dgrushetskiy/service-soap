
package de.codecentric.namespace.weatherservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import de.codecentric.namespace.weatherservice.general.ForecastRequest;
import de.codecentric.namespace.weatherservice.general.ForecastReturn;
import de.codecentric.namespace.weatherservice.general.WeatherInformationReturn;
import de.codecentric.namespace.weatherservice.general.WeatherReturn;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b14002
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WeatherService", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/")
@XmlSeeAlso({
    de.codecentric.namespace.weatherservice.datatypes.ObjectFactory.class,
    de.codecentric.namespace.weatherservice.exception.ObjectFactory.class,
    de.codecentric.namespace.weatherservice.general.ObjectFactory.class,
    org.w3._2005._05.xmlmime.ObjectFactory.class
})
public interface WeatherService {


    /**
     * Gets Information for each WeatherID
     * 
     * @param zip
     * @return
     *     returns de.codecentric.namespace.weatherservice.general.WeatherInformationReturn
     * @throws WeatherException
     */
    @WebMethod(operationName = "GetWeatherInformation", action = "http://www.codecentric.de/namespace/weatherservice/GetWeatherInformation")
    @WebResult(name = "GetWeatherInformationResult", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
    @RequestWrapper(localName = "GetWeatherInformation", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetWeatherInformation")
    @ResponseWrapper(localName = "GetWeatherInformationResponse", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetWeatherInformationResponse")
    public WeatherInformationReturn getWeatherInformation(
            @WebParam(name = "ZIP", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
                    String zip)
        throws WeatherException
    ;

    /**
     * Allows you to get your City Forecast Over the Next 7 Days, which is updated hourly.
     * 
     * @param forecastRequest
     * @return
     *     returns de.codecentric.namespace.weatherservice.general.ForecastReturn
     * @throws WeatherException
     */
    @WebMethod(operationName = "GetCityForecastByZIP", action = "http://www.codecentric.de/namespace/weatherservice/GetCityForecastByZIP")
    @WebResult(name = "GetCityForecastByZIPResult", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
    @RequestWrapper(localName = "GetCityForecastByZIP", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetCityForecastByZIP")
    @ResponseWrapper(localName = "GetCityForecastByZIPResponse", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetCityForecastByZIPResponse")
    public ForecastReturn getCityForecastByZIP(
            @WebParam(name = "ForecastRequest", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
                    ForecastRequest forecastRequest)
        throws WeatherException
    ;

    /**
     * Allows you to get your City's Weather, which is updated hourly.
     * 
     * @param forecastRequest
     * @return
     *     returns de.codecentric.namespace.weatherservice.general.WeatherReturn
     * @throws WeatherException
     */
    @WebMethod(operationName = "GetCityWeatherByZIP", action = "http://www.codecentric.de/namespace/weatherservice/GetCityWeatherByZIP")
    @WebResult(name = "GetCityWeatherByZIPResult", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
    @RequestWrapper(localName = "GetCityWeatherByZIP", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetCityWeatherByZIP")
    @ResponseWrapper(localName = "GetCityWeatherByZIPResponse", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general", className = "de.codecentric.namespace.weatherservice.general.GetCityWeatherByZIPResponse")
    public WeatherReturn getCityWeatherByZIP(
            @WebParam(name = "ForecastRequest", targetNamespace = "http://www.codecentric.de/namespace/weatherservice/general")
                    ForecastRequest forecastRequest)
        throws WeatherException
    ;

}
